;+
; Project     : BBSO Active Region Monitor (ARM)
;
; Name        : arm_regions
;
; Purpose     : Generate a web page for each region in the NOAA
;               active region summary.
;
; Syntax      : arm_regions, date, prev_date, summary
;
; Inputs      : utc = UTC in 'dd-mmm-yyyy hh:mm' fortam
;               date = string in yyyymmdd format
;               prev_date = date - 1 day
;               summary = output from ar_org.pro
;
; Example    : IDL> arm_regions, utc, '10-jan-2001 00:00', '20010110', '20010109', summary
;                
; Outputs     : Generates an html file for each region in RegionNumber.html format
;
; Keywords    : None
;
; History     : Written 05-feb-2001, Peter Gallagher, BBSO
;
; Contact     : ptg@bbso.njit.edu
;
;-

pro arm_regions, output_path, date_struct, summary,  map_struct,  $ 
				 SEIT_00195 = seit_00195, SEIT_00284 = seit_00284, SMDI_IGRAM = smdi_igram, SMDI_MAGLC = smdi_maglc, $
				 BBSO_HALPH = bbso_halph, GSXI = gsxi, GONG_MAGLC = gong_maglc, SEIT_00171 = seit_00171, $
				 SEIT_00304 = seit_00304, TRCE_M0171 = trce_m0171

	angstrom = string( 197B ) 
	
	utc       = date_struct.utc
	date      = date_struct.date
	prev_date = date_struct.prev_date
	next_date = date_struct.next_date
	
	fov = [10,10]
	
	set_plot,'z'
	year = strmid( date, 0, 4 )
	
	;eit195 = eit195_map
	;mag = mag_map
	;wl = wl_map
	;halpha = ha_map
	;eit284 = eit284_map
	;gong = gong_map
	;dB = dB_map
	;sxig12 = sxig12_map
	;eit171 = eit171_map
	;eit304 = eit304_map

	; Read in active region summary.
   
	names  = reform( summary( 0, * ) )
	loc    = reform( summary( 1, * ) )
	type   = reform( summary( 2, * ) )
	z      = reform( summary( 3, * ) )
	area   = reform( summary( 4, * ) )
	nn     = reform( summary( 5, * ) )
	ll     = reform( summary( 6, * ) )
	events = reform( summary( 7, * ) )
	
	for i = 0, n_elements( events ) - 1 do begin
	
		if ( events( i ) eq '' ) then events( i ) = '-' 
	
	endfor 
  
	ar_type = type
	
	for i = 0, n_elements( type ) - 1 do begin
  
		pos = strpos( type( i ), '/' )
		reg = strmid( type( i ), 0, pos ) 
		
		if ( reg eq 'a' )   then ar_type( i )   = 'Alpha'  
		if ( reg eq 'b' )   then ar_type( i )   = 'Beta'  
		if ( reg eq 'g' )   then ar_type( i )   = 'Gamma'  
		if ( reg eq 'bg' )  then ar_type( i )   = 'Beta-Gamma'  
		if ( reg eq 'bgd' ) then ar_type( i )   = 'Beta-Gamma-Delta'  
		if ( reg eq 'd' )   then ar_type( i )   = 'Delta'  
		if ( reg eq 'gd' )  then ar_type( i )   = 'Gamma-Delta'  
		if ( reg eq 'bd' )  then ar_type( i )   = 'Beta-Delta'  

	endfor

  
	; Rotate NOAA summary data to the frame times.
	
	;times = [ eit195.time, mag.time, wl.time, halpha.time, eit284.time, $
	;          gong.time, dB.time, sxig12.time, eit304.time, eit171.time ]
  
  	if keyword_set(gong_maglc) then $
  		times = [map_struct.scaled_map.time, map_struct.scaled_db_map.time] $
  	else $
  		times = [map_struct.scaled_map.time]
	
	x = fltarr( n_elements( times ), n_elements( names ) )
	y = x
	
	for i = 0, n_elements( times )  - 1 do begin 
  
		loc = reform( summary( 1, * ) ) ; Added to stop loc being overwritten
		dum = rot_locations( loc, utc, times( i ), solar_xy = solar_xy )
    
		for j = 0,  n_elements( names ) - 1 do begin
			x( i, j ) = solar_xy( 0 , j )
			y( i, j ) = solar_xy( 1 , j )
		endfor	
	
	endfor
  
  
	; Extract 10 arcmin regions centred on the NOAA regions and
	; generate a jpg for each region.
	  
	scaled_map = map_struct.scaled_map
	unscaled_map = map_struct.unscaled_map

	for i = 0,  n_elements( names ) - 1 do begin
    
		set_plot,'z'
		device, set_resolution = [ 400, 400 ]
		!p.charsize = 0.6
	
		if keyword_set(gsxi) then begin
			; Plot the SXI GOES-12 data      
			loadct, 3, /silent
			!p.color = 0
			!p.background = 255
			
			;	scaled map	
			sub_map, scaled_map, sub_scaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_map, sub_unscaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
				
			sub_scaled_map.data(0,0)=min(scaled_map.data)
			sub_scaled_map.data(0,1)=max(scaled_map.data)			
			
			; change indices
			;	get rid of center
			;	[ get rid of fov]\
			;	change map to sub_map
			plot_map, sub_scaled_map, /square, grid = 10, title = 'SXI X-rays ' + sub_scaled_map.time, $
				dmin = 2, dmax = max( sub_scaled_map.data ), /log
		   
			for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 0 , j) gt ( x( 0, i ) - 4.5 * 60. ) )   and $
					( x( 0 , j) lt ( x( 0, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 0 , j) gt ( y( 0, i ) - 4.5 * 60. ) )   and $
					( y( 0 , j) lt ( y( 0, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1
						
				endif
			endfor
		
			image = tvrd()
			date_time = time2file(sub_scaled_map.time,/seconds)
			instrument = 'gsxi'
			filter = 'flter'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
                        gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
		endif
	    
		; Plot the EIT 195 data
		if keyword_set(seit_00195) then begin   
			eit_colors, 195
			!p.color = 0
			!p.background = 255
			
			;	scaled map	
			sub_map, scaled_map, sub_scaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_map, sub_unscaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
				
			sub_scaled_map.data(0,0)=min(scaled_map.data)
			sub_scaled_map.data(0,1)=max(scaled_map.data)
			
			plot_map, sub_scaled_map, /square,fov=fov, grid = 10, title = 'EIT 195 ' + angstrom + ' ' + sub_scaled_map.time , $
				dmin = min( sub_scaled_map.data ), dmax = max( sub_scaled_map.data )
		    
		    for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 0 , j) gt ( x( 0, i ) - 4.5 * 60. ) )   and $
					( x( 0 , j) lt ( x( 0, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 0 , j) gt ( y( 0, i ) - 4.5 * 60. ) )   and $
					( y( 0 , j) lt ( y( 0, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1
		
				endif
			endfor
		    
			image = tvrd()	
			date_time = time2file(sub_scaled_map.time,/seconds)
			instrument = 'seit'
			filter = '00195'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
                        gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
		endif
		
		; Plot the EIT 304 data  
		if keyword_set(seit_00304) then begin
			eit_colors, 304
			!p.color = 0
			!p.background = 255
			
			;	scaled map	
			sub_map, scaled_map, sub_scaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_map, sub_unscaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
							
			sub_scaled_map.data(0,0)=min(scaled_map.data)
			sub_scaled_map.data(0,1)=max(scaled_map.data)
							
			plot_map, sub_scaled_map, /square, grid = 10, title = 'EIT 304 ' + angstrom + ' ' + sub_scaled_map.time, $
				dmin = min( sub_scaled_map.data ), dmax = max( sub_scaled_map.data )

			for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 0 , j) gt ( x( 0, i ) - 4.5 * 60. ) )   and $
					( x( 0 , j) lt ( x( 0, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 0 , j) gt ( y( 0, i ) - 4.5 * 60. ) )   and $
					( y( 0 , j) lt ( y( 0, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1	
				endif
			endfor
			
			image = tvrd()
			date_time = time2file(sub_scaled_map.time,/seconds)
			instrument = 'seit'
			filter = '00304'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
                        gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
		endif
		
		; Plot the EIT 171 data  
		if keyword_set(seit_00171) then begin
			eit_colors, 171
			!p.color = 0
			!p.background = 255
			
			;	scaled map	
			sub_map, scaled_map, sub_scaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_map, sub_unscaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
							
			sub_scaled_map.data(0,0)=min(scaled_map.data)
			sub_scaled_map.data(0,1)=max(scaled_map.data)
				
			plot_map, sub_scaled_map, /square, grid = 10, title = 'EIT 171 ' + angstrom + ' ' + sub_scaled_map.time, $
				dmin = min( sub_scaled_map.data ), dmax = max( sub_scaled_map.data )
			
			for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 0 , j) gt ( x( 0, i ) - 4.5 * 60. ) )   and $
					( x( 0 , j) lt ( x( 0, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 0 , j) gt ( y( 0, i ) - 4.5 * 60. ) )   and $
					( y( 0 , j) lt ( y( 0, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1
				endif
			endfor
			
			image = tvrd()
			date_time = time2file(sub_scaled_map.time,/seconds)
			instrument = 'seit'
			filter = '00171'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
			gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
		endif
	 
		; Plot the MDI magnetogram   
		if keyword_set(smdi_maglc) then begin
			loadct, 0, /silent
			!p.color = 0
			!p.background = 255
			
			;	scaled map	
			sub_map, scaled_map, sub_scaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_map, sub_unscaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
							
			sub_scaled_map.data(0,0)=min(scaled_map.data)
			sub_scaled_map.data(0,1)=max(scaled_map.data)
				
			plot_map, sub_scaled_map, /square, grid = 10, title = 'MDI Magnetogram ' + sub_scaled_map.time, $
				dmin = min( sub_scaled_map.data ), dmax = max( sub_scaled_map.data )
			
			for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 0 , j) gt ( x( 0, i ) - 4.5 * 60. ) )   and $
					( x( 0 , j) lt ( x( 0, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 0 , j) gt ( y( 0, i ) - 4.5 * 60. ) )   and $
					( y( 0 , j) lt ( y( 0, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1
				endif
			endfor
			
			image = tvrd()         
			date_time = time2file(sub_scaled_map.time,/seconds)
			instrument = 'smdi'
			filter = 'maglc'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
                        gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
		endif
	    
	    ; Plot the MDI Continuum  
	    if keyword_set(smdi_igram) then begin
			loadct, 1, /silent
			gamma_ct,1
			!p.color = 0
			!p.background = 255
			
			;	scaled map	
			sub_map, scaled_map, sub_scaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_map, sub_unscaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
								
			sub_scaled_map.data(0,0)=min(scaled_map.data)
			sub_scaled_map.data(0,1)=max(scaled_map.data)
					
			plot_map, sub_scaled_map, /square, grid = 10, title = 'MDI Continuum '+ sub_scaled_map.time, $
				dmin = min( sub_scaled_map.data ), dmax = max( sub_scaled_map.data )
			
			for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 0 , j) gt ( x( 0, i ) - 4.5 * 60. ) )   and $
					( x( 0 , j) lt ( x( 0, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 0 , j) gt ( y( 0, i ) - 4.5 * 60. ) )   and $
					( y( 0 , j) lt ( y( 0, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1
				endif
			endfor
			
			image = tvrd()                  
			date_time = time2file(sub_scaled_map.time,/seconds)
			instrument = 'smdi'
			filter = 'igram'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
                        gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
		endif
	
	    ; Plot the H-alpha data  
	    if keyword_set(bbso_halph) then begin
			loadct, 3, /silent
			;gamma_ct, 0.8
			!p.color = 0
			!p.background = 255
			
			;	scaled map	
			sub_map, scaled_map, sub_scaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_map, sub_unscaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
							
			sub_scaled_map.data(0,0)=min(scaled_map.data)
			sub_scaled_map.data(0,1)=max(scaled_map.data)
					
			plot_map, sub_scaled_map, /square, grid = 10, title = 'H-alpha ' + sub_scaled_map.time, $
				dmin = min( sub_scaled_map.data ), dmax = max( sub_scaled_map.data )
			
			for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 0 , j) gt ( x( 0, i ) - 4.5 * 60. ) )   and $
					( x( 0 , j) lt ( x( 0, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 0 , j) gt ( y( 0, i ) - 4.5 * 60. ) )   and $
					( y( 0 , j) lt ( y( 0, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1
				endif
			endfor
			
			image = tvrd()                  
			date_time = time2file(sub_scaled_map.time,/seconds)
			instrument = 'bbso'
			filter = 'halph'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
                        gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts' 
		endif
	
		; Plot the EIT 284 data
		if keyword_set(seit_00284) then begin
			eit_colors, 284
			!p.color = 0
			!p.background = 255
			
			;	scaled map	
			sub_map, scaled_map, sub_scaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_map, sub_unscaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
							
			sub_scaled_map.data(0,0)=min(scaled_map.data)
			sub_scaled_map.data(0,1)=max(scaled_map.data)	
					
			plot_map, sub_scaled_map, /square, grid = 10, title = 'EIT 284 ' + angstrom + ' ' + sub_scaled_map.time
			
			for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 0 , j) gt ( x( 0, i ) - 4.5 * 60. ) )   and $
					( x( 0 , j) lt ( x( 0, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 0 , j) gt ( y( 0, i ) - 4.5 * 60. ) )   and $
					( y( 0 , j) lt ( y( 0, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1
				endif
			endfor
			
			image = tvrd()
			date_time = time2file(sub_scaled_map.time,/seconds)
			instrument = 'seit'
			filter = '00284'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
			gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
		endif
	
		; Plot the GONG+ data  
		if keyword_set(gong_maglc) then begin
			loadct, 0, /silent
			!p.color = 0
			!p.background = 255
			
			;	scaled map	
			sub_map, scaled_map, sub_scaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_map, sub_unscaled_map, xrange=[ x( 0, i ) - 5 * 60., x( 0, i ) + 5 * 60. ],$
				yrange=[ y( 0, i ) - 5 * 60., y( 0, i ) + 5 * 60. ]
							
			sub_scaled_map.data(0,0)=min(scaled_map.data)
			sub_scaled_map.data(0,1)=max(scaled_map.data)
								
			plot_map, sub_scaled_map, /square, grid = 10, title = 'GONG+ Magnetogram ' + sub_scaled_map.time, $
				dmin = -250, dmax = 250
			
			arm_colorbar, [ -250, 250 ]
			xyouts, 0.27, 0.70, 'Magnetic Flux [Gauss]', /normal, color = 255, charsize = 0.8 
			
			for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 0 , j) gt ( x( 0, i ) - 4.5 * 60. ) )   and $
					( x( 0 , j) lt ( x( 0, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 0 , j) gt ( y( 0, i ) - 4.5 * 60. ) )   and $
					( y( 0 , j) lt ( y( 0, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 0 , j), y( 0 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1
				endif
			endfor
			
			image = tvrd()         
			date_time = time2file(sub_scaled_map.time,/seconds)
			instrument = 'gong'
			filter = 'maglc'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
                        gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
		endif
		
		; Plot the magnetic gradient map  
		if keyword_set(gong_maglc) then begin
			loadct, 5, /silent
			gamma_ct, 1.2
			!p.color = 0
			!p.background = 255
			
			scaled_db_map = map_struct.scaled_db_map
			unscaled_db_map = map_struct.unscaled_db_map
			
			;	scaled map	
			sub_map, scaled_db_map, sub_scaled_db_map, xrange=[ x( 1, i ) - 5 * 60., x( 1, i ) + 5 * 60. ],$
				yrange=[ y( 1, i ) - 5 * 60., y( 1, i ) + 5 * 60. ]
			
			;	unscaled (raw) map
			sub_map, unscaled_db_map, sub_unscaled_db_map, xrange=[ x( 1, i ) - 5 * 60., x( 1, i ) + 5 * 60. ],$
				yrange=[ y( 1, i ) - 5 * 60., y( 1, i ) + 5 * 60. ]
							
			sub_scaled_db_map.data(0,0)=min(scaled_db_map.data)
			sub_scaled_db_map.data(0,1)=max(scaled_db_map.data)
				
			;plot_map, dB, /square, center = [ x( 6, i ), y( 6, i ) ], $
			
			plot_map, sub_scaled_db_map, /square, title = 'GONG+ Longitudinal Gradient ' + sub_scaled_db_map.time, $
				dmin = min( sub_scaled_db_map.data ), dmax = max( sub_scaled_db_map.data ), grid = 10
			
			arm_colorbar, [ min( sub_scaled_db_map.data ), max( sub_scaled_db_map.data ) ]
			xyouts, 0.27, 0.70, 'Gradient [Gauss/km]', /normal, color = 255, charsize = 0.8 
			
			for j = 0, n_elements( names ) - 1 do begin
				if  ( ( ( x( 1 , j) gt ( x( 1, i ) - 4.5 * 60. ) )   and $
					( x( 1 , j) lt ( x( 1, i ) + 4.5 * 60. ) ) ) and $  
					( ( y( 1 , j) gt ( y( 1, i ) - 4.5 * 60. ) )   and $
					( y( 1 , j) lt ( y( 1, i ) + 4.5 * 60. ) ) ) ) then begin
				
					xyouts, x( 1 , j), y( 1 , j) + 60, names( j ), align = 0.5, $
						charthick = 3, color = 0, charsize = 1
					xyouts, x( 1 , j), y( 1 , j) + 60, names( j ), align = 0.5, $
						charthick = 1, color = 255, charsize = 1
				endif
			endfor
			
			image = tvrd()         
			date_time = time2file(sub_scaled_db_map.time,/seconds)
			instrument = 'gong'
			filter = 'bgrad'
			wr_png, output_path + '/data/' + date + '/pngs/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.png', image( 22:343, 35:356 )
			map2fits, sub_unscaled_db_map, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'
                        gzip, output_path + '/data/' + date + '/fits/' + instrument + '/' + instrument + '_' + filter + '_ar_' + names( i ) + '_' + date_time + '.fts'

	    endif
	
	    set_plot, 'x'
	   
	
		print,' Completed: ' + names( i )
	      
	endfor
	     
   
	;endfor
end
